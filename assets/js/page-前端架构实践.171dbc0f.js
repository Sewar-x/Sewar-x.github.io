(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{1655:function(v,_,t){"use strict";t.r(_);var a=t(1),s=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"前端架构实践"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端架构实践"}},[v._v("#")]),v._v(" 前端架构实践")]),v._v(" "),_("h2",{attrs:{id:"数字化研发职责"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数字化研发职责"}},[v._v("#")]),v._v(" "),_("strong",[v._v("数字化研发职责")])]),v._v(" "),_("p",[_("strong",[v._v("数字化研发/研发架构师/产品经理/项目经理是什么？")])]),v._v(" "),_("p",[v._v("什么是数字化软件研发人员？数字化软件研发人员和数字化软件产品经理，数字化项目经理有什么区别？他们的职责分别是什么？")]),v._v(" "),_("blockquote",[_("p",[v._v("数字化研发工程师职责")])]),v._v(" "),_("ol",[_("li",[v._v("软件设计、开发、测试、维护；")]),v._v(" "),_("li",[v._v("推动项目计划进度、协调沟通；")]),v._v(" "),_("li",[v._v("确保软件功能稳定、性能极致、提升用户体验；")]),v._v(" "),_("li",[v._v("系统维护，提供技术支持；")]),v._v(" "),_("li",[v._v("推动数字化创新；")])]),v._v(" "),_("blockquote",[_("p",[v._v("数字化软件架构师")])]),v._v(" "),_("ol",[_("li",[v._v("需求分析把控、技术选型、技术文档、技术评审；")]),v._v(" "),_("li",[v._v("参与公司技术研发体系的搭建、公共组件的开发和维护")]),v._v(" "),_("li",[v._v("提升团队的技术实力、制定并推广最佳实践")])]),v._v(" "),_("blockquote",[_("p",[v._v("数字化产品/项目")])]),v._v(" "),_("ol",[_("li",[v._v("需求调研、需求分析、原型设计；")]),v._v(" "),_("li",[v._v("产品规划、确定功能和特性；")]),v._v(" "),_("li",[v._v("制定项里程碑、推动项目计划进度、项目风险管理、协调沟通；")])]),v._v(" "),_("p",[_("strong",[v._v("目的：明确研发核心职责，把握研发方向；")])]),v._v(" "),_("h2",{attrs:{id:"产研流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#产研流程"}},[v._v("#")]),v._v(" "),_("strong",[v._v("产研流程")])]),v._v(" "),_("h3",{attrs:{id:"为什么要规范产研流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么要规范产研流程"}},[v._v("#")]),v._v(" "),_("strong",[v._v("为什么要规范产研流程？")])]),v._v(" "),_("p",[_("strong",[v._v("规范流程，岗位专业化，提高产研效率")])]),v._v(" "),_("p",[v._v("产品/项目：专注数字化业务，提升业务理解，提升需求把握的准确度，提高项目交付效率（业务主导，专注于业务流程）；")]),v._v(" "),_("p",[v._v("研发：提升研发效率，提高交付效率，保障项目交付，保证产品质量（技术主导，专注于交付效率和质量）；")]),v._v(" "),_("h2",{attrs:{id:"如何衡量产研人效"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何衡量产研人效"}},[v._v("#")]),v._v(" "),_("strong",[v._v("如何衡量产研人效")])]),v._v(" "),_("h3",{attrs:{id:"研发价值和目标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#研发价值和目标"}},[v._v("#")]),v._v(" "),_("strong",[v._v("研发价值和目标")])]),v._v(" "),_("p",[_("strong",[v._v("目标： 提升持续交付的价值能力")])]),v._v(" "),_("p",[_("img",{attrs:{src:t(581),alt:"image-20240220101322991"}})]),v._v(" "),_("h2",{attrs:{id:"数字化架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数字化架构"}},[v._v("#")]),v._v(" 数字化架构")]),v._v(" "),_("p",[v._v("目前服务于某制造业公司数字化部门，以下根据当前数字化部门软件架构进行分析")]),v._v(" "),_("h3",{attrs:{id:"服务架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务架构"}},[v._v("#")]),v._v(" "),_("strong",[v._v("服务架构")])]),v._v(" "),_("h4",{attrs:{id:"各层应用架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#各层应用架构"}},[v._v("#")]),v._v(" "),_("strong",[v._v("各层应用架构")])]),v._v(" "),_("p",[_("img",{attrs:{src:t(582),alt:"image-20240220102252222"}})]),v._v(" "),_("h5",{attrs:{id:"基础设施层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基础设施层"}},[v._v("#")]),v._v(" "),_("strong",[v._v("基础设施层")])]),v._v(" "),_("p",[v._v("基础设施层提供各种基础服务")]),v._v(" "),_("blockquote",[_("ul",[_("li",[_("strong",[v._v("MySQL")]),v._v(": 提供基础数据存储服务；")]),v._v(" "),_("li",[_("strong",[v._v("ElasticSearch")]),v._v(":全文搜索引擎，提供了近乎实时的搜索和分析功能，主要用于存储、搜索和分析大量的数据。在系统中提供搜索数字化流程中附件内容功能；")]),v._v(" "),_("li",[_("strong",[v._v("Redis")]),v._v(": 提供数据缓存服务；")]),v._v(" "),_("li",[_("strong",[v._v("RabbitMQ")]),v._v(": 消息代理软件，面向消息的中间件;")]),v._v(" "),_("li",[_("strong",[v._v("流程引擎")]),v._v("： 提供制造数字化流程中的流程服务；")]),v._v(" "),_("li",[_("strong",[v._v("MinIO OSS")]),v._v("： 开源的对象存储服务，类似于阿里云提供的OSS服务。MinIO允许用户在本地或云上部署，提供了更大的灵活性和自主权，用户可以自由地查看、修改和分发其源代码。提供文件服务。")])])]),v._v(" "),_("h5",{attrs:{id:"服务层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务层"}},[v._v("#")]),v._v(" "),_("strong",[v._v("服务层")])]),v._v(" "),_("p",[v._v("服务层分为技术支撑和业务中心，技术支撑为服务层中使用的技术栈和相关技术分析，业务中心为提供各种服务的平台，使用微服务架构模式搭建，通过各种服务搭建而成。")]),v._v(" "),_("h5",{attrs:{id:"网络层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#网络层"}},[v._v("#")]),v._v(" "),_("strong",[v._v("网络层")])]),v._v(" "),_("p",[v._v("网络层通常提供各种网关服务，该层由集团网络服务中心统一配置。")]),v._v(" "),_("h5",{attrs:{id:"应用层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用层"}},[v._v("#")]),v._v(" "),_("strong",[v._v("应用层")])]),v._v(" "),_("p",[v._v("应用层主要为各种系统和服务，在部门中将系统分为应用系统和外部系统；")]),v._v(" "),_("p",[v._v("应用系统为当前部门负责开发和维护的系统，外部系统为其他部门开发和维护的系统；")]),v._v(" "),_("p",[_("strong",[v._v("Service")])]),v._v(" "),_("p",[v._v("各系统中的服务，使用微服务架构。")]),v._v(" "),_("blockquote",[_("ul",[_("li",[_("p",[_("strong",[v._v("OAuth2 认证服务")]),v._v("：为各个系统提供统一的认证服务，所有系统通过该服务进行统一认证。")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("API 中间件服务")]),v._v("：集中管理所有 API 服务。")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("项目同步服务")]),v._v("：定时与其他服务同步项目数据服务。")])])])]),v._v(" "),_("h4",{attrs:{id:"服务器架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务器架构"}},[v._v("#")]),v._v(" "),_("strong",[v._v("服务器架构")])]),v._v(" "),_("p",[_("img",{attrs:{src:t(583),alt:"image-20240220103410510"}})]),v._v(" "),_("blockquote",[_("p",[v._v("为了提供容灾备份能力，目前团队内部所有服务都采用主从架构：")]),v._v(" "),_("p",[_("strong",[v._v("MySQL 数据库")]),v._v("：采用读写分离+备份服务。确保数据库高性能、高可用性和数据安全性。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("读写分离")]),v._v("：\n"),_("ul",[_("li",[_("strong",[v._v("主库（Master）")]),v._v("：负责处理所有的写操作（如INSERT、UPDATE、DELETE）以及部分或全部的读操作。主库会记录所有更改的二进制日志（Binary Log）。")]),v._v(" "),_("li",[_("strong",[v._v("从库（Slave）")]),v._v("：负责处理读操作。从库通过复制主库的二进制日志来保持与主库的数据同步。读操作可以根据负载均衡策略分配到多个从库上，从而分散读负载并提高性能。")]),v._v(" "),_("li",[_("strong",[v._v("读写分离中间件")]),v._v("：为了简化应用程序与多个数据库实例之间的交互，使用中间件（如ProxySQL、MyCAT等）实现读写分离和负载均衡。中间件会根据SQL语句的类型（读/写）将请求路由到适当的数据库实例。")])])]),v._v(" "),_("li",[_("strong",[v._v("备份服务")]),v._v("：使用增量备份模式备份数据。\n"),_("ul",[_("li",[_("strong",[v._v("全量备份")]),v._v("：定期（如每天）对整个数据库进行完整备份。这通常是通过使用工具如"),_("code",[v._v("mysqldump")]),v._v("或其他第三方备份解决方案来完成的。")]),v._v(" "),_("li",[_("strong",[v._v("增量备份")]),v._v("：在全量备份之间，可以记录二进制日志的更改，以便在需要时恢复到某个特定时间点。这种备份方法可以减少备份所需的时间和存储空间。")])])])]),v._v(" "),_("p",[_("strong",[v._v("服务集群")]),v._v("：所有应用服务也是采用主从架构的集群，通过 Nginx 实现主从服务的负载均衡。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("主服务")]),v._v("：应用系统主要服务。")]),v._v(" "),_("li",[_("strong",[v._v("从服务")]),v._v("：应用系统备份和负载服务。")])])]),v._v(" "),_("h4",{attrs:{id:"业务中心"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#业务中心"}},[v._v("#")]),v._v(" "),_("strong",[v._v("业务中心")])]),v._v(" "),_("p",[_("img",{attrs:{src:t(584),alt:"image-20240220103453121"}})]),v._v(" "),_("blockquote",[_("ul",[_("li",[_("strong",[v._v("数据湖中心")]),v._v("：统一的数据中心，为 BI数据分析提供基础数据；")]),v._v(" "),_("li",[_("strong",[v._v("配置中心")]),v._v("：统一管理各种应用配置的基础服务组件，将原本分散在各个应用中的配置信息集中管理起来，通过统一的接口对外提供服务。在微服务架构中，配置中心通常作为整个微服务基础架构体系中的一个组件，用于解决配置的动态变更、权限管理、持久化、运维成本等问题。")]),v._v(" "),_("li",[_("strong",[v._v("镜像包中心")]),v._v("：集中存储和管理软件镜像包的平台。在软件开发和运维领域，镜像包通常指的是软件或应用的安装包、依赖库、插件等文件，它们通常以镜像的形式存储在镜像仓库（如Docker镜像仓库）或其他文件存储服务中。")]),v._v(" "),_("li",[_("strong",[v._v("报表中心")]),v._v("：集成了各种报表功能的管理平台，主要功能是为用户提供数据呈现和决策支持。用户可以统一查看和管理各种类型的报表，包括财务报表、管理报表等。")]),v._v(" "),_("li",[v._v("**调度中心：**协调和管理资源、任务或进程，以确保它们按照特定的规则、优先级或需求进行运行。")]),v._v(" "),_("li",[_("strong",[v._v("用户中心")]),v._v("：提供统一的用户登录与注册、基本信息查询与修改等功能。第三方应用需要登录的时候，会把用户的登录请求转发给用户中心进行处理，用户处理完毕后返回凭证，第三方应用验证凭证，通过后就登录用户。")]),v._v(" "),_("li",[v._v("**日志中心：**集中管理和存储日志信息。由日志服务提供。")]),v._v(" "),_("li",[_("strong",[v._v("通知中心")]),v._v("：在程序内部提供了消息广播的一种机制。基于观察者模式设计，主要为了解决应用程序内部不同对象之间解耦而设计。由邮件服务提供。")]),v._v(" "),_("li",[_("strong",[v._v("权限中心")]),v._v("：权限管理系统，主要负责用户身份和授权访问的控制，实现资源的访问控制和数据安全保障。能够对不同用户设置不同的访问权限。")]),v._v(" "),_("li",[_("strong",[v._v("监控中心")]),v._v("：系统的控制中心，通常用于对各类设施、设备、环境等进行实时监控和管理。包括数据采集、监控控制、报警处理、数据分析等功能。")])])]),v._v(" "),_("h4",{attrs:{id:"服务数据流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务数据流"}},[v._v("#")]),v._v(" "),_("strong",[v._v("服务数据流")])]),v._v(" "),_("h5",{attrs:{id:"内部数据流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内部数据流"}},[v._v("#")]),v._v(" "),_("strong",[v._v("内部数据流")])]),v._v(" "),_("p",[_("img",{attrs:{src:t(585),alt:"image-20240220103547244"}})]),v._v(" "),_("h5",{attrs:{id:"外部数据流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#外部数据流"}},[v._v("#")]),v._v(" "),_("strong",[v._v("外部数据流")])]),v._v(" "),_("p",[_("img",{attrs:{src:t(586),alt:"image-20240220103624651"}})]),v._v(" "),_("h4",{attrs:{id:"服务端技术栈"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务端技术栈"}},[v._v("#")]),v._v(" "),_("strong",[v._v("服务端技术栈")])]),v._v(" "),_("p",[_("img",{attrs:{src:t(587),alt:"image-20240220103720259"}})]),v._v(" "),_("h3",{attrs:{id:"前端架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端架构"}},[v._v("#")]),v._v(" "),_("strong",[v._v("前端架构")])]),v._v(" "),_("h4",{attrs:{id:"前端架构解决什么问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端架构解决什么问题"}},[v._v("#")]),v._v(" 前端架构解决什么问题？")]),v._v(" "),_("p",[v._v("前端架构是为了解决前端开发中的复杂性和可维护性问题。")]),v._v(" "),_("p",[v._v("随着Web应用的复杂度逐渐增加，前端代码也变得越来越庞大和复杂，如果没有一个好的架构，会导致代码难以维护、扩展和重用。")]),v._v(" "),_("p",[v._v("需要前端架构的原因：")]),v._v(" "),_("ol",[_("li",[_("p",[_("strong",[v._v("提高可维护性")])]),v._v(" "),_("ul",[_("li",[v._v("前端架构可以将代码组织成模块化和可复用的组件，使得代码更加易于理解和维护。")]),v._v(" "),_("li",[v._v("通过合理的架构，降低组件之间的耦合度，提高代码的灵活性和可扩展性。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("提高开发效率")])]),v._v(" "),_("ul",[_("li",[v._v("帮助开发人员更好地组织和利用代码，提高开发效率。")]),v._v(" "),_("li",[v._v("通过使用成熟的框架和工具，可以快速搭建前端应用，减少重复造轮子的情况。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("提高用户体验")])]),v._v(" "),_("ul",[_("li",[v._v("前端架构可以帮助开发人员更好地控制页面的性能、样式和行为，提高用户体验。")]),v._v(" "),_("li",[v._v("通过前端架构，可以更好地实现页面优化、性能优化和响应式设计，提高页面的加载速度和响应速度。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("促进团队协作")])]),v._v(" "),_("ul",[_("li",[v._v("前端架构可以帮助团队更好地协作和分工，提高开发效率和质量。")]),v._v(" "),_("li",[v._v("通过明确组件的职责和接口规范，可以使得团队成员更好地协同工作，减少沟通和协调的成本。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("降低成本")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("前端架构可以帮助降低开发和维护的成本。")])]),v._v(" "),_("li",[_("p",[v._v("通过复用成熟的框架和组件，可以减少开发人员的学习成本和使用成本，同时也可以减少后期的维护成本。")])])])])]),v._v(" "),_("p",[_("img",{attrs:{src:t(588),alt:"image-20240119171404206"}})]),v._v(" "),_("h3",{attrs:{id:"研发流程痛点分析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#研发流程痛点分析"}},[v._v("#")]),v._v(" 研发流程痛点分析")]),v._v(" "),_("h4",{attrs:{id:"发版不一致问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#发版不一致问题"}},[v._v("#")]),v._v(" 发版不一致问题")]),v._v(" "),_("h4",{attrs:{id:"版本管理不规范"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#版本管理不规范"}},[v._v("#")]),v._v(" 版本管理不规范")]),v._v(" "),_("h4",{attrs:{id:"版本回退"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[v._v("#")]),v._v(" 版本回退")]),v._v(" "),_("ul",[_("li",[v._v("当前没有任何自动化版本回滚，都是通过 git 手动回滚版本；")])]),v._v(" "),_("h4",{attrs:{id:"接口不规范"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接口不规范"}},[v._v("#")]),v._v(" 接口不规范")]),v._v(" "),_("h4",{attrs:{id:"接口开发进度阻塞ui开发进度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接口开发进度阻塞ui开发进度"}},[v._v("#")]),v._v(" 接口开发进度阻塞UI开发进度")]),v._v(" "),_("h4",{attrs:{id:"重复造轮子"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重复造轮子"}},[v._v("#")]),v._v(" 重复造轮子")]),v._v(" "),_("ul",[_("li",[v._v("SRDPM 登录接口开发一次，PMP 登录接口开发一次；")]),v._v(" "),_("li",[v._v("SRDPM 用户接口开发一次，PMP 用户接口开发一次；")]),v._v(" "),_("li",[v._v("SRDPM 权限脚本开发一次，PMP 权限 脚本开发一次；")]),v._v(" "),_("li",[v._v("SRDPM 自动发版构建脚本开发一次，PMP 自动发版构建脚本开发一次；")]),v._v(" "),_("li",[v._v("脚手架不统一：SRDPM 搭建一个基本项目脚手架，PMP 也重新搭建一个基本项目脚手架；")]),v._v(" "),_("li",[v._v("组件库不统一：SRDPM 开发一个公共组件库，PMP 也开发一个公共组件库；")])]),v._v(" "),_("p",[v._v("当出现多个项目时，如：RDM 重构，数据中台系统，权限管理系统重构，配置中台（配置中心，API 中间件中心，队列管理中心），以上重复工作量为量级增加；")]),v._v(" "),_("p",[v._v("当然，通过粘贴复制基础脚手架也能解决以上问题，然而，如果出现组件库版本更新时候，脚手架配置更新时候，是否所有项目也通过粘贴复制模式将更新代码手动更新？如果更新的量大，该如何解决更新量级问题？")]),v._v(" "),_("h4",{attrs:{id:"服务与业务耦合"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务与业务耦合"}},[v._v("#")]),v._v(" 服务与业务耦合")]),v._v(" "),_("ul",[_("li",[v._v("单点登录服务与 SRDPM 用户数据耦合；")])]),v._v(" "),_("h2",{attrs:{id:"前端架构实践-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端架构实践-2"}},[v._v("#")]),v._v(" 前端架构实践")]),v._v(" "),_("h3",{attrs:{id:"自定义脚手架"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自定义脚手架"}},[v._v("#")]),v._v(" 自定义脚手架")]),v._v(" "),_("h4",{attrs:{id:"为什么要自定义脚手架"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么要自定义脚手架"}},[v._v("#")]),v._v(" 为什么要自定义脚手架")]),v._v(" "),_("h3",{attrs:{id:"自定义脚本"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自定义脚本"}},[v._v("#")]),v._v(" 自定义脚本")]),v._v(" "),_("ul",[_("li",[v._v("统一规范")]),v._v(" "),_("li",[v._v("统一通用后台管理系统模板")]),v._v(" "),_("li",[v._v("统一自动部署脚本")]),v._v(" "),_("li",[v._v("统一自定义组件包")]),v._v(" "),_("li",[v._v("统一权限管理脚本")]),v._v(" "),_("li",[v._v("统一自定义模板生成器")]),v._v(" "),_("li",[v._v("统一Mock 数据")])]),v._v(" "),_("h3",{attrs:{id:"前端自动部署"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端自动部署"}},[v._v("#")]),v._v(" 前端自动部署")]),v._v(" "),_("h3",{attrs:{id:"前端版本回滚"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端版本回滚"}},[v._v("#")]),v._v(" 前端版本回滚")]),v._v(" "),_("p",[_("strong",[v._v("现状")])]),v._v(" "),_("p",[v._v("当前版本回滚没有任何流程化管理模式，使用最原始的分支管理和 git 命令直接回滚")]),v._v(" "),_("p",[v._v("当前回滚版本流程：以 SRDPM 为例，目前生产服对应 prod 分支代码，测试服对应 test 分支代码，（master 为保护分支，定期将 prod 代码合并到 master）假如生产服某个版本出现重大问题，需要回滚，通过以下 Git 操作流程回滚：")]),v._v(" "),_("ol",[_("li",[v._v("使用 "),_("code",[v._v("git checkout prod")]),v._v(" 切换到 prod 分支，使用 "),_("code",[v._v("git log")]),v._v(" 查看提交记录；")]),v._v(" "),_("li",[v._v("查找到需要回滚的提交记录 hash 值，复制提交记录 hash 值；")]),v._v(" "),_("li",[v._v("使用命令 "),_("code",[v._v("git reset --hard <commit-hash>")]),v._v(" 强制回滚，也可以使用 "),_("code",[v._v("git revert <commit-hash>")]),v._v(" 去除提交记录（两个命令区别可以参考文章："),_("a",{attrs:{href:"https://sewar-x.github.io/git/#git-%E5%9B%9E%E6%BB%9A",target:"_blank",rel:"noopener noreferrer"}},[v._v("git 回滚"),_("OutboundLink")],1),v._v("）；")]),v._v(" "),_("li",[v._v("强制推送到远程分支："),_("code",[v._v("git push --force origin <branch-name>")]),v._v(";")]),v._v(" "),_("li",[v._v("执行命令"),_("code",[v._v("npm run build")]),v._v("重新构建并上传当前分支代码；")])]),v._v(" "),_("p",[v._v("手动回滚的方式缺点非常明显：")]),v._v(" "),_("ul",[_("li",[v._v("学习成本高：对于不熟悉 git 命令的开发人员，需要熟悉 Git 各个命令作用和回滚流程；")]),v._v(" "),_("li",[v._v("容易出错：首先要熟悉 git 命令和分支管理流程，此外要准确使用 git reset 命令，否则将可能出现不可估量的错误；")]),v._v(" "),_("li",[v._v("操作繁琐：每次回滚，都要本地执行以上多个步骤；")])]),v._v(" "),_("p",[v._v("为了避免以上问题，为了能够快速回滚代码，需要将回滚流程自动化；")]),v._v(" "),_("h3",{attrs:{id:"node版本回滚"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#node版本回滚"}},[v._v("#")]),v._v(" Node版本回滚")]),v._v(" "),_("h3",{attrs:{id:"jenkins-流水线"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-流水线"}},[v._v("#")]),v._v(" Jenkins 流水线")]),v._v(" "),_("h3",{attrs:{id:"前端埋点系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端埋点系统"}},[v._v("#")]),v._v(" 前端埋点系统")]),v._v(" "),_("p",[v._v("前端埋点系统的好处：")]),v._v(" "),_("ul",[_("li",[v._v("记录每个页面的访问量（日周月年的UV、PV）；")]),v._v(" "),_("li",[v._v("记录每个功能的使用量；")]),v._v(" "),_("li",[v._v("捕捉报错情况；")]),v._v(" "),_("li",[v._v("图表化显示，方便给其他部门展示；")])]),v._v(" "),_("h2",{attrs:{id:"监控和报警系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#监控和报警系统"}},[v._v("#")]),v._v(" "),_("strong",[v._v("监控和报警系统")])]),v._v(" "),_("h2",{attrs:{id:"权限系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#权限系统"}},[v._v("#")]),v._v(" "),_("strong",[v._v("权限系统")])]),v._v(" "),_("h2",{attrs:{id:"用户认证"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#用户认证"}},[v._v("#")]),v._v(" "),_("strong",[v._v("用户认证")])]),v._v(" "),_("h3",{attrs:{id:"现状"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#现状"}},[v._v("#")]),v._v(" "),_("strong",[v._v("现状")])]),v._v(" "),_("ol",[_("li",[v._v("各系统已实现单点登陆，但仍然耦合各自应用系统授权登陆，自成一套体系；")]),v._v(" "),_("li",[v._v("用户认证机制与权限耦合，导致扩展性差，不利于维护；")]),v._v(" "),_("li",[v._v("用户认证机制逻辑流程未遵循单一原则，耦合其他字段；")]),v._v(" "),_("li",[v._v("未形成研发内部统一标准规范，及对接API文档；")])]),v._v(" "),_("p",[_("img",{attrs:{src:t(589),alt:"image-20240220104157577"}})]),v._v(" "),_("h3",{attrs:{id:"重构方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重构方案"}},[v._v("#")]),v._v(" "),_("strong",[v._v("重构方案")])]),v._v(" "),_("ol",[_("li",[v._v("重构用户认证流程，并且新增刷新/校验，及绑定对应唯一APPID；")]),v._v(" "),_("li",[v._v("将现有登陆业务解耦，拆分用户认证与权限逻辑，实现验证逻辑的单一原则；")]),v._v(" "),_("li",[v._v("统一认证中心，签发有效用户凭证；")]),v._v(" "),_("li",[v._v("输出标准规范文档，及API文档；")])]),v._v(" "),_("p",[_("img",{attrs:{src:t(590),alt:"image-20240220104405672"}})])])}),[],!1,null,null,null);_.default=s.exports},581:function(v,_,t){v.exports=t.p+"assets/img/研发效能1.61209466.png"},582:function(v,_,t){v.exports=t.p+"assets/img/Moka服务架构.cf308814.png"},583:function(v,_,t){v.exports=t.p+"assets/img/moka服务器架构.64785967.png"},584:function(v,_,t){v.exports=t.p+"assets/img/moka业务中心.8494f290.png"},585:function(v,_,t){v.exports=t.p+"assets/img/moka业务数据流.c875c27e.png"},586:function(v,_,t){v.exports=t.p+"assets/img/外部数据流.50696e95.png"},587:function(v,_,t){v.exports=t.p+"assets/img/moka服务端技术栈.09fb7473.png"},588:function(v,_,t){v.exports=t.p+"assets/img/数字化架构图.db5d5e22.png"},589:function(v,_,t){v.exports=t.p+"assets/img/moka认证中心.ca195af0.png"},590:function(v,_,t){v.exports=t.p+"assets/img/moka认证中心2.c50cdbbc.png"}}]);